{"version":3,"sources":["components/jumbotron.js","utils/api.js","components/searchBar.js","components/table.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","className","id","axios","get","SearchBar","props","onChange","handleInputChange","value","search","name","type","placeholder","Table","state","sortOrder","results","event","target","searchTerm","toLowerCase","setState","sortByFName","sortedEmployees","sort","a","b","first","reverse","sortByLName","last","API","then","res","data","console","log","catch","err","this","onClick","map","item","includes","src","picture","thumbnail","alt","cell","phone","email","login","uuid","React","Component","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.41c5dd5c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/jumbotron.css\"\r\n\r\nfunction Jumbotron() {\r\n  return (\r\n  <div>\r\n    <div className=\"jumbotron bg-primary text-white jumbotron-fluid\" id=\"jumboTron\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\"><i className=\"fas fa-user-friends\"></i> <b>Employee Directory</b></h1>\r\n        <p className=\"lead\">Search by first or last name or select a column heading to sort.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;","import axios from \"axios\";\r\nconst url = 'https://randomuser.me/api/?results=30';\r\n\r\n//api call\r\nexport default {\r\n    ApiSearch: function () {\r\n        return axios.get(url)\r\n\r\n    }\r\n}","import React from \"react\";\r\n//import DataAreaContext from \"../utils/dataAreaContext.js\";\r\nimport \"../styles/searchBar.css\"\r\n\r\nconst SearchBar = (props) => {\r\n//const context = useContext(DataAreaContext)\r\n\r\n  return (\r\n    <form>\r\n    <div className=\"form-group search-widget\">\r\n      <div className=\"input-group mb-3\">\r\n  \r\n        <input\r\n          onChange={props.handleInputChange}\r\n          value={props.search}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder='Search directory for Employee'\r\n          id=\"search\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </form>\r\n  );\r\n}\r\nexport default SearchBar;","import React from \"react\";\r\nimport API from \"../utils/api.js\"\r\nimport Search from \"./searchBar\"\r\nimport \"../styles/table.css\"\r\n\r\n//npm package to reformat DOB\r\nimport DateFormat from 'dateformat';\r\n\r\nclass Table extends React.Component {\r\n\r\n  state = {\r\n    sortOrder: \"\",\r\n    results: [],\r\n    search: \"\"\r\n  }\r\n\r\n  //Api call for randomuser.me\r\n  componentDidMount() {\r\n    API.ApiSearch()\r\n      .then(res => {\r\n        this.setState({ results: res.data.results })\r\n        console.log(this.state.results)\r\n      }).catch(err => console.log(err))\r\n  }\r\n\r\n\r\n  //Handle input in search bar \r\n  handleInputChange = event => {\r\n\r\n    if (event.target.name === \"search\") {\r\n      const searchTerm = event.target.value.toLowerCase();\r\n      this.setState({\r\n        search: searchTerm\r\n      })\r\n    }\r\n  }\r\n\r\n  //Sort by first name\r\n  sortByFName = () => {\r\n    const sortedEmployees = this.state.results.sort((a, b) => {\r\n      if (b.name.first > a.name.first) {\r\n        return -1\r\n      }\r\n      if (a.name.first > b.name.first) {\r\n        return 1\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    if (this.state.sortOrder === \"DESC\") {\r\n      sortedEmployees.reverse();\r\n      this.setState({ sortOrder: \"ASC\" });\r\n    } else {\r\n      this.setState({ sortOrder: \"DESC\" });\r\n    }\r\n    this.setState({ results: sortedEmployees })\r\n  }\r\n\r\n  //Sort by last name \r\n  sortByLName = () => {\r\n    const sortedEmployees = this.state.results.sort((a, b) => {\r\n      if (b.name.last > a.name.last) {\r\n        return -1\r\n      }\r\n      if (a.name.last > b.name.last) {\r\n        return 1\r\n      }\r\n      return 0;\r\n    });\r\n    if (this.state.sortOrder === \"DESC\") {\r\n      sortedEmployees.reverse();\r\n      this.setState({ sortOrder: \"ASC\" });\r\n    } else {\r\n      this.setState({ sortOrder: \"DESC\" });\r\n    }\r\n    this.setState({ results: sortedEmployees })\r\n  }\r\n\r\n  //Render items \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Search handleInputChange={this.handleInputChange}\r\n          search={this.state.search} />\r\n\r\n        <div className=\"table-responsive\">\r\n        <table className=\"table bg-info text-white table-striped table-resposive text-center table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>Image</th>\r\n                <th>First Name <span className=\"downArrow\" onClick={this.sortByFName}></span></th>\r\n                <th>Last Name <span className=\"downArrow\" onClick={this.sortByLName}></span></th>\r\n                <th>Cell</th>\r\n                <th>Phone</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            { //First Name sort\r\n              this.state.results && this.state.results.map(item =>\r\n                item.name.first.toLowerCase().includes(this.state.search) ?\r\n                  <tbody key={item.login.uuid}>\r\n                    <tr>\r\n                      <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\r\n                      <td >{item.name.first}</td>\r\n                      <td >{item.name.last}</td>\r\n                      <td >{item.cell}</td>\r\n                      <td >{item.phone}</td>\r\n                      <td >{item.email}</td>  \r\n                    </tr>\r\n                  </tbody>\r\n\r\n                  :\r\n                  //Last Name sort\r\n                  item.name.last.toLowerCase().includes(this.state.search) ?\r\n                    <tbody key={item.login.uuid}>\r\n                      <tr>\r\n                      <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\r\n                        <td >{item.name.first}</td>\r\n                        <td >{item.name.last}</td>\r\n                        <td >{item.phone} </td>\r\n                        <td >{item.email}</td> \r\n                      </tr>\r\n                    </tbody>\r\n                    :\r\n                    null\r\n              )}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table;","import React from \"react\";\r\nimport Jumbotron from \"./components/jumbotron\";\r\nimport Table from \"./components/table\"; \r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n    <Jumbotron/>\r\n    <Table />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.register();\n"],"sourceRoot":""}